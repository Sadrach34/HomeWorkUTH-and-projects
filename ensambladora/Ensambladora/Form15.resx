<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAYGBgYHBgcICAcKCwoLCg8ODAwODxYQERAREBYiFRkVFRkV
        Ih4kHhweJB42KiYmKjY+NDI0PkxERExfWl98fKf/2wBDAQYGBgYHBgcICAcKCwoLCg8ODAwODxYQERAR
        EBYiFRkVFRkVIh4kHhweJB42KiYmKjY+NDI0PkxERExfWl98fKf/wgARCAFoAWgDASIAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAUGAgQHAwH/xAAUAQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIQAxAA
        AAK1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANGNLArP0sqsCzquLQreyTan+pa1XFoVjAtSn/C4qh8Lgrt
        hPoAAAAAAAAAAAObadm0iGS+RDJr2K+sesQvpjiWGvWyvGoz2zRbo0m19NRu+Zrbmp8One9StoAAAAAA
        AAAAAecSTSvaxalR+ltVfVPKBzwJ7P75mxb+W7B0pzj6dGc8xOiuc/C00j18iyXGIlwAAAAAAAAAABXL
        GOX+XS6IR4ABZiSpsrCBtWAqq14lWWjzK2sWBAbTVOqq1ZQAAAAAAAAAAAAChw3VObmnIx2ZYozchTzB
        M3zlX06o5d6nTHNvp0hzLMsdRzwJDovOejAAAAAAAAAAAAACGmRypNRJ9tdQ9TDCx/CurVmVJbfMqyzY
        lbWTErq1TBH2MAAAAAAAAAAAAAAAGGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8QAAv/aAAwD
        AQACAAMAAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEIMAEAMEMEMAAAAAAAAAAAAIIMAQEEEAAMgAAA
        AAAAAAAAIAMEo4MMAAMAAAAAAAAAAAAQEEMIAAEEIEAAAAAAAAAAAAAAIg4AMAAMoIAAAAAAAAAAAAAQ
        Iw0IEEIYgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//EAAL/2gAMAwEAAgAD
        AAAAEPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNOPPOMPPPPPPPPPPPPPPMPNNMOOMNKFPPPPPPPPPP
        PPONMHHMNNNOFPPPPPPPPPPPLHOMMJOPNNMPPPPPPPPPPPPPLHDGPENOMPHPPPPPPPPPPPPPLOCJMMPO
        IHPPPPPPPPPPPPPPPLPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP
        PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP/xAAUEQEAAAAAAAAAAAAAAAAA
        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
        /9k=
</value>
  </data>
</root>